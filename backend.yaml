- name: configure backend server 
  hosts: backend
  become: yes
  vars:
    mysql_root_password: ExpenseApp@1
    login_host: mysql.veeraprakash.online
  tasks:
    - name: disable default nodejs
      ansible.builtin.command: dnf module disable nodejs -y

    - name: enable nodesjs 20
      ansible.builtin.command: dnf module enable nodejs:20 -y

    - name: Install nodejs 20 and mysql
      ansible.builtin.package: 
        name: "{{ item }}"
        state: present
      loop: 
      - nodejs
      - mysql
    
    - name: create expense user 
      ansible.builtin.file:
        path: /app
        state: directory
    
    - name: download backend code
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /tmp/backend.zip 
    
    - name: extract the code
      ansible.builtin.unarchive:
        src: /tmp/backend.zip
        dest: /app
        remote_src: yes
    
    - name: Install dependencies
      ansible.builtin.command: npm install 
      args:
        chdir: /app
    
    - name: copy backend servcice file 
      ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

    - name: Install PyMySQL and cryptography
      ansible.builtin.pip:
        name:
        - PyMySQL
        - cryptography
        executable: pip3.9

    - name: import mysql data
      community.mysql.mysql_db:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        login_host: "{{ login_host }}"
        target: /app/schema/backend.sql
        name: all 
        state: import
    
    - name: daemon reload
      ansible.builtin.systemd_service:
        daemon_reload: true
        state: restarted
        name: backend
